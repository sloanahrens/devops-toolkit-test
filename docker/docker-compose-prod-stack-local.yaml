version: '3.4'

services:

  api-gateway:
    image: api-gateway
    restart: unless-stopped
    tty: true
    container_name: local_prod_api_gateway
    ports:
      - "9999:9999"

  ui:
    image: ui
    restart: unless-stopped
    tty: true
    container_name: local_prod_ui
    ports:
      - "80:80"

  webapp:
    image: django
    restart: unless-stopped
    tty: true
    container_name: local_prod_webapp
    env_file:
     - ../container_environments/test-stack.yaml
    ports:
      - "8000:8000"
    links:
      - database
      - queue
      - redis
    command: /src/initialize-webapp.sh

  worker:
    image: django
    restart: unless-stopped
    tty: true
    container_name: local_prod_worker
    env_file:
     - ../container_environments/test-stack.yaml
    links:
      - database
      - queue
      - redis
    command: bash -c "export C_FORCE_ROOT=true && celery --app=stellarbot.celery worker -O fair -c 1 --loglevel=info"

  beat:
    image: django
    restart: unless-stopped
    tty: true
    container_name: local_prod_beat
    env_file:
     - ../container_environments/test-stack.yaml
    links:
      - database
      - queue
      - redis
    command: bash -c "export C_FORCE_ROOT=true && sleep 20 && celery --app=stellarbot.celery beat --loglevel=info"

  queue:
    image: rabbitmq:alpine
    container_name: local_dev_rabbitmq
    env_file:
     - ../container_environments/test-stack.yaml

  redis:
    image: redis:alpine
    container_name: local_dev_redis
    env_file:
     - ../container_environments/test-stack.yaml

  database:
    image: postgres:alpine
    restart: unless-stopped
    tty: true
    container_name: local_prod_postgres
    env_file:
     - ../container_environments/test-stack.yaml
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data

# volumes:
#   postgres_data:
#     external: false