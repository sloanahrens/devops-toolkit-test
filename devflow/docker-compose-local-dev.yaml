version: '3.4'

services:

  api-gateway:
    image: devopsfaith/krakend:1.1.1
    restart: unless-stopped
    tty: true
    container_name: local_dev_api_gateway
    volumes:
      - ../docker/api-gateway/krakend.json:/etc/krakend/krakend.json
    command: >
      run -d --config /etc/krakend/krakend.json
    ports:
      - "9999:9999"

  # npm dev server
  ui:
    image: ui:dev
    restart: unless-stopped
    tty: true
    container_name: local_dev_ui
    stdin_open: true
    volumes:
      - ../ui:/app
    ports:
      - "80:80"

  # django dev server
  webapp:
    image: baseimage
    restart: unless-stopped
    tty: true
    container_name: local_dev_webapp
    env_file:
     - ../container_environments/test-stack.yaml
    volumes:
      - ../django/stellarbot:/src
    ports:
      - "8000:8000"
    links:
      - database
    command: bash -c "python manage.py migrate && python manage.py create_admin_user && python manage.py runserver 0.0.0.0:8000"

  # celery worker
  worker:
    image: baseimage
    container_name: local_dev_celery_worker
    env_file:
     - ../container_environments/test-stack.yaml
    environment:
      C_FORCE_ROOT: "yes"
    volumes:
      - ../django/stellarbot:/src
    links:
      - database
      - queue
    command: bash -c "celery --app=stellarbot.celery worker -O fair -c 1 --loglevel=info"

  # celery beat (scheduled tasks)
  beat:
    image: baseimage
    container_name: local_dev_celery_beat
    env_file:
     - ../container_environments/test-stack.yaml
    environment:
      C_FORCE_ROOT: "yes"
    volumes:
      - ../django/stellarbot:/src
    links:
      - database
      - queue
    command: bash -c "sleep 30 && celery --app=stellarbot.celery beat --loglevel=info"

  queue:
    image: rabbitmq:alpine
    container_name: local_dev_rabbitmq
    env_file:
     - ../container_environments/test-stack.yaml

  redis:
    image: redis:alpine
    container_name: local_dev_redis
    env_file:
     - ../container_environments/test-stack.yaml

  database:
    image: postgres:alpine
    restart: unless-stopped
    tty: true
    container_name: local_dev_database
    env_file:
     - ../container_environments/test-stack.yaml
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data

# volumes:
#   postgres_data:
#     external: false